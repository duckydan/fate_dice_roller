<?php
/**
 * @file
 * Fate Groups utility module, including custom functions for dice rolling.
 */

/**
 * Implements hook_update_projects_alter() for update_projects().
 */
function fate_utils_update_projects_alter(&$projects) {
  // We wish to remove our custom modules from any drupal.org updates.
  foreach ($projects as $key => $project) {
    // Most custom module match this naming convention.
    if (preg_match('/^fate_.*$/', $key)) {
      unset($projects[$key]);
    }
  }
}

/**
 * Implements hook_comment_presave().
 */

function fate_utils_comment_presave($comment) {
  // Here we look at the comment to make sure nothing is already in 'Roll result'.
  $comment_field_roll_items = field_get_items('comment', $comment, 'field_roll');
  // Here we look at the comment to see if something has been entered in 'Roll modifier'.
  $comment_field_roll_modifier = field_get_items('comment', $comment, 'field_roll_modifier');
  
  // dsm($comment_field_roll_items);
  // dsm($comment_field_roll_modifier);

  if ((count($comment_field_roll_items)==0) && (count($comment_field_roll_modifier)==1)) {
	// If a modifier (even 0) is set and no results exist, do the roll.
    $firstdie = (rand(0, 2)) - 1;
    $seconddie = (rand(0, 2)) - 1;
    $thirddie = (rand(0, 2)) - 1;
    $fourthdie = (rand(0, 2)) - 1;

    $modifier = $comment->field_roll_modifier['und'][0]['value'];

    if ($modifier > 0) {
	  // In Fate, a plus sign is used for any positive number, so convert to interger.
      $modifier_display = '+' . intval($modifier);
    }
    else {
	  // If they entered a plain integer (naughty) then handle it.
	  // TODO Should probably sanitize this.
      $modifier_display = $modifier;
    }

    // Total up the roll of all four dice
    $roll = $firstdie + $seconddie + $thirddie + $fourthdie + $modifier;
	
	// Convert the four dice results into sweet Font Awesome glyfs (SO COOL).
    $roll_display = _get_font_awesome_dice($firstdie)
      . ' ' . _get_font_awesome_dice($seconddie)
      . ' ' . _get_font_awesome_dice($thirddie)
      . ' ' . _get_font_awesome_dice($fourthdie);
    
	// Shove the resulting HTML into the Roll result field.
    $comment->field_roll['und'][0]['value'] = $roll_display . ' with a '
      . $modifier_display . ' added to the roll for a total of: '
      . $roll . ' (' . _ladder($roll) . ')';

	// Set the format. There should be a better way to do this.
    $comment->field_roll['und'][0]['format'] = 'full_html';
  }
}


function _get_font_awesome_dice($value) {
  $die = '<i class="fa fa-square"></i>';

  if ($value == -1) {
    $die = '<i class="fa fa-minus-square"></i>';
  }
  if ($value == 0) {
    $die = '<i class="fa fa-square"></i>';
  }
  if ($value == 1) {
    $die = '<i class="fa fa-plus-square"></i>';
  }
  return $die;
}


function _ladder($value) {
  $adjective = 'Good';

  if ($value > 7) {
    $adjective = 'Legendary';
  }
  if ($value == 7) {
    $adjective = 'Epic';
  }
  if ($value == 6) {
    $adjective = 'Fantastic';
  }
  if ($value == 5) {
    $adjective = 'Superb';
  }
  if ($value == 4) {
    $adjective = 'Great';
  }
  if ($value == 3) {
    $adjective = 'Good';
  }
  if ($value == 2) {
    $adjective = 'Fair';
  }
  if ($value == 1) {
    $adjective = 'Average';
  }
  if ($value == 0) {
    $adjective = 'Mediocre';
  }
  if ($value == -1) {
    $adjective = 'Poor';
  }
  if ($value < -1) {
    $adjective = 'Terrible';
  }
  return $adjective;
}
